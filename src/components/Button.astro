---
interface Props extends astroHTML.JSX.ButtonHTMLAttributes {
  variant: "primary" | "secundary" | "transparent";
}
const { variant, class: className, ...rest } = Astro.props;
const isPrimary = variant === "primary";
const isSecundary = variant === "secundary";
const isTransparent = variant === "transparent";
const disabled = rest.disabled || false;
---

<button
  {...rest}
  class={`rounded-sm transition transform active:animate-ping border opacity-80 font-bold ${className}`}
  class:list={{
    "py-2 px-8 bg-theme-accent text-theme-primary border-theme-accent":
      isPrimary,
    "py-2 px-8 text-theme-primary border-theme-primary": isSecundary,
    "bg-transparent border-none w-fit h-fit py-0 px-0 ": isTransparent,
    "opacity-70 active:scale-100 bg-theme-accent/50": disabled,
  }}
>
  <slot />
</button>
