---
interface Props extends Partial<Exercise> {
  dayId: number;
}

import { CheckButtonWithState } from "@components/react/CheckButton";
import TimeChip from "@components/TimeChip.astro";
import type { Exercise } from "@interfaces/routines";
const { time, apparatus, dayId, id } = Astro.props;
const idContainer = `${dayId}_${id}`;

const baseMachines = [
  { label: "Elíptica", urlImage: "/machines/eliptica", width: "70" },
  { label: "Caminadora", urlImage: "/machines/caminadora", width: "90" },
  {
    label: "Escalera infinita",
    urlImage: "/machines/escalera_infinita",
    width: "90",
  },
  { label: "Remadora", urlImage: "/machines/remadora", width: "130" },
  { label: "Bicicleta estática", urlImage: "/machines/bici", width: "85" },
];

const cardioMachines = (() => {
  if (!apparatus?.name) return baseMachines;

  const selected = baseMachines.find(
    (m) => m.label.toLowerCase() === apparatus.name.toLowerCase(),
  );
  const others = baseMachines.filter(
    (m) => m.label.toLowerCase() !== apparatus.name.toLowerCase(),
  );

  return selected ? [selected, ...others] : baseMachines;
})();
---

<div
  class="rounded-[20px] w-full pb-3 bg-theme-text-light"
  id={idContainer}
  data-selector={idContainer}
>
  <div class="flex h-full justify-between px-4 pt-4 mb-2 items-center w-full">
    <p class="text-theme-primary text-2xl font-semibold w-10/12">
      Cardio con aparato
    </p>
    <CheckButtonWithState client:only="react" id={id || ""} dayId={dayId} />
  </div>
  <p class="w-5/6 px-4">
    Usa la máquina <strong>{apparatus?.name.toLowerCase() || ""}</strong> u otro
    <br />
    aparato de cardio.
  </p>
  <div
    class="relative overflow-x-auto my-4 hide-scroll mask-fade-both card-scroll"
  >
    <div class="flex gap-4 p-4 py-2">
      {
        cardioMachines.map((machine, idx) => (
          <div
            class="h-40 w-36 min-w-36 bg-theme-primary rounded-xl card-item"
            data-index={idx}
          >
            <div class="flex items-center justify-center text-center w-full h-2/6 text-theme-text-light p-2">
              {machine.label}
            </div>
            <div class="flex items-center justify-center w-full h-4/6 bg-theme-dots rounded-b-xl">
              <img
                width={machine.width}
                class="img-machine"
                src={`${machine.urlImage}.png`}
                alt={`Maquina a usar : ${machine.label}`}
              />
            </div>
          </div>
        ))
      }
      <div class="shrink-0 w-3"></div>
    </div>
  </div>
  <div class="flex justify-center gap-2">
    {
      new Array(cardioMachines.length)
        .fill(0)
        .map((_, idx) => (
          <span
            class="w-2 h-2 bg-theme-dots rounded-full card-dot"
            data-index={idx}
          />
        ))
    }
  </div>
  <TimeChip by={time?.by || 30} unit={time?.unit || "mins"} />
</div>
<script>
  import { DotsCompareActive } from "@scripts/dots-carousel";
  document.addEventListener("astro:page-load", () => {
    document
      .querySelectorAll<HTMLDivElement>("div[data-selector]")
      .forEach((container) => {
        if (!container) {
          console.log("Not found id container");
          return;
        }
        DotsCompareActive(container.id);
      });
  });
</script>
<style>
  .mask-fade-both {
    -webkit-mask-image: linear-gradient(
      to right,
      transparent 0%,
      black 5%,
      black 95%,
      transparent 100%
    );
    mask-image: linear-gradient(
      to right,
      transparent 0%,
      black 5%,
      black 95%,
      transparent 100%
    );
  }
  .hide-scroll::-webkit-scrollbar {
    display: none;
  }
  .hide-scroll {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
</style>
