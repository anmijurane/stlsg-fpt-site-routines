import { useMemo, useState, type FC } from 'react';
import { useStore } from '@nanostores/react';

import { Routine } from '@store/routines';
import { setDoneExerciseById } from '@store/routines.actions';

import type { StateExercise } from '@interfaces/store';

const ForTodoIcon = () => {
  return (
    <svg width="37" height="40" viewBox="0 0 37 40" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g clipPath="url(#clip0_544_32)">
        <path d="M24.6661 4.36735C24.4043 4.26892 24.1141 4.27854 23.8593 4.39408C23.6046 4.50963 23.4062 4.72159 23.3077 4.98342C23.2093 5.24526 23.2189 5.53548 23.3345 5.79023C23.45 6.04498 23.662 6.24335 23.9238 6.34178C27.6597 7.76243 30.7321 10.5242 32.5414 14.0881C34.3507 17.652 34.767 21.7621 33.7091 25.6164C32.6513 29.4708 30.1951 32.7926 26.8201 34.9335C23.445 37.0745 19.3933 37.881 15.4556 37.1955C11.518 36.5101 7.97711 34.382 5.52402 31.2265C3.07093 28.071 1.8817 24.1146 2.18846 20.1295C2.49523 16.1445 4.27596 12.4167 7.1831 9.67385C10.0902 6.93099 13.9152 5.36993 17.9113 5.29522L17.0502 6.15621C16.9378 6.25 16.8461 6.36618 16.781 6.49736C16.7159 6.62855 16.6789 6.77188 16.6723 6.91817C16.6657 7.06445 16.6897 7.21051 16.7426 7.34703C16.7956 7.48355 16.8764 7.60756 16.9799 7.71111C17.0835 7.81465 17.2075 7.89545 17.344 7.94842C17.4805 8.00139 17.6266 8.02535 17.7729 8.01874C17.9192 8.01213 18.0625 7.97507 18.1936 7.91C18.3248 7.84494 18.441 7.75326 18.5348 7.6408L21.2071 4.96856C21.4051 4.77213 21.5172 4.50521 21.5188 4.22627C21.5189 4.08803 21.4913 3.95114 21.4377 3.82368C21.3842 3.69622 21.3058 3.58075 21.2071 3.48398L18.5348 0.811749C18.3327 0.643247 18.075 0.556399 17.8122 0.568275C17.5493 0.580151 17.3005 0.689865 17.1144 0.875902C16.9284 1.06194 16.8186 1.31087 16.8067 1.5737C16.7949 1.83653 16.8817 2.09427 17.0502 2.29633L17.9335 3.17962C13.4304 3.25689 9.11776 5.00989 5.83769 8.09621C2.55763 11.1825 0.54569 15.3806 0.194732 19.8707C-0.156227 24.3608 1.179 28.8205 3.93969 32.379C6.70038 35.9375 10.6883 38.3392 15.1247 39.1152C19.5612 39.8913 24.1276 38.9857 27.9323 36.5757C31.737 34.1656 34.5068 30.4239 35.7008 26.0813C36.8948 21.7387 36.4274 17.1069 34.3897 13.0905C32.3521 9.07398 28.8905 5.96119 24.681 4.35992L24.6661 4.36735Z" fill="#9600FA" />
        <path d="M6.46582 21.3362C6.46582 23.6499 7.15192 25.9117 8.43737 27.8355C9.72282 29.7593 11.5499 31.2587 13.6875 32.1441C15.8251 33.0296 18.1773 33.2613 20.4466 32.8099C22.7159 32.3585 24.8004 31.2443 26.4365 29.6082C28.0725 27.9721 29.1867 25.8877 29.6381 23.6184C30.0895 21.3491 29.8578 18.9969 28.9724 16.8593C28.0869 14.7217 26.5875 12.8946 24.6637 11.6092C22.7399 10.3237 20.4781 9.63763 18.1643 9.63763C15.0617 9.63763 12.0861 10.8701 9.89224 13.064C7.69834 15.2579 6.46582 18.2335 6.46582 21.3362ZM19.5376 14.2324V19.9555H22.7294C22.9188 19.9416 23.1089 19.9668 23.288 20.0297C23.4671 20.0926 23.6314 20.1918 23.7704 20.321C23.9095 20.4503 24.0204 20.6068 24.0963 20.7808C24.1721 20.9548 24.2113 21.1426 24.2113 21.3324C24.2113 21.5223 24.1721 21.7101 24.0963 21.8841C24.0204 22.0581 23.9095 22.2146 23.7704 22.3439C23.6314 22.4731 23.4671 22.5722 23.288 22.6351C23.1089 22.698 22.9188 22.7233 22.7294 22.7094H18.1643C17.9834 22.7104 17.804 22.6756 17.6366 22.607C17.4691 22.5384 17.3168 22.4374 17.1885 22.3098C17.0602 22.1822 16.9584 22.0304 16.8889 21.8633C16.8194 21.6962 16.7837 21.5171 16.7837 21.3362V14.2324C16.8092 13.8847 16.9654 13.5595 17.2208 13.3222C17.4762 13.0848 17.8119 12.9529 18.1606 12.9529C18.5093 12.9529 18.845 13.0848 19.1004 13.3222C19.3558 13.5595 19.512 13.8847 19.5376 14.2324Z" fill="#9600FA" />
      </g>
      <defs>
        <clipPath id="clip0_544_32">
          <rect width="36.3278" height="39" fill="white" transform="translate(0 0.5)" />
        </clipPath>
      </defs>
    </svg>
  )
}

const DoneIcon = () => {
  return (
    <svg
      width="39"
      height="39"
      viewBox="0 0 39 39"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_355_85)">
        <path
          d="M19.5 39C30.2696 39 39 30.2696 39 19.5C39 8.73045 30.2696 0 19.5 0C8.73045 0 0 8.73045 0 19.5C0 30.2696 8.73045 39 19.5 39Z"
          fill="#9600FA"></path>
        <path
          d="M29.1048 9.54782C29.0012 9.44121 28.8633 9.37471 28.7154 9.35991C28.5674 9.34512 28.419 9.38301 28.2964 9.46699C22.2814 13.7276 18.2472 18.1256 15.2883 23.6716C15.1185 23.4776 14.9487 23.2674 14.779 23.0572C13.728 21.7475 12.5395 20.268 10.9873 20.2114C10.4303 20.2411 9.88656 20.3917 9.39371 20.6528C8.90087 20.9138 8.4708 21.2791 8.13343 21.7232L7.88281 21.9819L8.15769 22.2245C10.5514 24.4041 12.6618 26.8758 14.4394 29.5814C14.5755 29.7613 14.7534 29.9053 14.9577 30.001C15.1619 30.0968 15.3863 30.1415 15.6117 30.1312C15.6869 30.1392 15.7628 30.1392 15.838 30.1312C16.0883 30.1078 16.3286 30.0214 16.5364 29.8801C16.7442 29.7387 16.9128 29.5469 17.0265 29.3228C20.5786 22.7131 24.6328 16.3859 29.1533 10.3967C29.2526 10.2747 29.3026 10.12 29.2937 9.9629C29.2847 9.80585 29.2173 9.65777 29.1048 9.54782Z"
          fill="#FFDC00"></path>
      </g>
      <defs>
        <clipPath id="clip0_355_85">
          <rect width="39" height="39" fill="white"></rect>
        </clipPath>
      </defs>
    </svg>
  )
}
interface Props extends Pick<StateExercise, "id"> {
  dayId: number;
}

export const CheckButtonWithState: FC<Props> = ({ id, dayId }) => {
  const routine = useStore(Routine);

  const actualRoutine = useMemo(() => {
    const dayRoutine = routine[`${dayId}`];
    if (!dayRoutine) return null;

    return dayRoutine.exercises.find(exercise => exercise.id === id);
  }, [routine]);

  const handleToggle = () => {
    setDoneExerciseById(dayId, { id, isDone: !actualRoutine?.isDone });
  }

  return (
    <button
      id={`button_${id}`}
      onClick={handleToggle}
      className='rounded-sm transition transform active:scale-85 border opacity-80 font-bold bg-transparent border-none w-fit h-fit py-0 px-0'
    >
      {actualRoutine?.isDone ? <DoneIcon /> : <ForTodoIcon />}
    </button>
  )
}

