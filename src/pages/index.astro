---
import MainLayout from "@layouts/MainLayout.astro";

import CardLevel, { type Zone } from "@components/CardLevel.astro";
import ExapandableCardGroup from "@components/expandibleCompose/ExpandableCardGroup.astro";
import HeroLayout from "@layouts/HeroLayout.astro";
import ExpandableCard from "@components/expandibleCompose/ExpandableCard.astro";

import { routines } from "@data/index";

import ConsentToUse from "@components/modals/ConsentToUse.astro";
---

<MainLayout title="Inicio">
	<HeroLayout>
		<ExapandableCardGroup
			name="levels"
			class="flex justify-center items-center flex-col gap-8 py-12"
		>
			<ExpandableCard
				title={routines.adaptation.name.toUpperCase()}
				id={routines.adaptation.id}
			>
				{
					routines.adaptation.levels.map((level) => {
						const zones: Zone[] = level.categoriesZone.map((zone, idx) => ({
							id: `${zone}_${idx}`,
							name: zone,
						}));
						return (
							<CardLevel
								zones={zones}
								numberLevel={level.id}
								frequencyDays={level.frequency.total}
								totalExercise={level.totalExercises}
								to={`attention/${routines.adaptation.id}/?level=${level.id}`}
							/>
						);
					})
				}
			</ExpandableCard>

			<ExpandableCard
				title={routines.health.name.toUpperCase()}
				id={routines.health.id}
			>
				{
					routines.health.levels.map((level) => {
						const zones: Zone[] = level.categoriesZone.map((zone, idx) => ({
							id: `${zone}_${idx}`,
							name: zone,
						}));
						return (
							<CardLevel
								zones={zones}
								numberLevel={level.id}
								frequencyDays={level.frequency.total}
								totalExercise={level.totalExercises}
								to={`attention/${routines.health.id}/?&level=${level.id}`}
							/>
						);
					})
				}
			</ExpandableCard>

			<ExpandableCard
				title={routines.muscle_gain.name.toUpperCase()}
				id={routines.muscle_gain.id}
			>
				{
					routines.muscle_gain.levels.map((level) => {
						const zones: Zone[] = level.categoriesZone.map((zone, idx) => ({
							id: `${zone}_${idx}`,
							name: zone,
						}));
						return (
							<CardLevel
								zones={zones}
								numberLevel={level.id}
								frequencyDays={level.frequency.total}
								totalExercise={level.totalExercises}
								to={`attention/${routines.muscle_gain.id}/?&level=${level.id}`}
							/>
						);
					})
				}
			</ExpandableCard>

			<ExpandableCard
				title={routines.fat_burning.name.toUpperCase()}
				id={routines.fat_burning.id}
			>
				{
					routines.fat_burning.levels.map((level) => {
						const zones: Zone[] = level.categoriesZone.map((zone, idx) => ({
							id: `${zone}_${idx}`,
							name: zone,
						}));
						return (
							<CardLevel
								zones={zones}
								numberLevel={level.id}
								frequencyDays={level.frequency.total}
								totalExercise={level.totalExercises}
								to={`attention/${routines.fat_burning.id}/?&level=${level.id}`}
							/>
						);
					})
				}
			</ExpandableCard>
		</ExapandableCardGroup>
		<ConsentToUse />
	</HeroLayout>
</MainLayout>

<script>
	import { dayOpen } from "@store/expandableUI";
	document.addEventListener(
		"astro:page-load",
		() => {
			if (window.location.pathname === "/") {
				dayOpen.set(null);
			}
		},
		{ passive: true },
	);
</script>
